// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	model "github.com/flaambe/avito/internal/model"
	mock "github.com/stretchr/testify/mock"
)

// MessageRepository is an autogenerated mock type for the MessageRepository type
type MessageRepository struct {
	mock.Mock
}

// FindMessages provides a mock function with given fields: chat
func (_m *MessageRepository) FindMessages(chat model.Chat) ([]model.Message, error) {
	ret := _m.Called(chat)

	var r0 []model.Message
	if rf, ok := ret.Get(0).(func(model.Chat) []model.Message); ok {
		r0 = rf(chat)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.Message)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(model.Chat) error); ok {
		r1 = rf(chat)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// InsertMessage provides a mock function with given fields: chat, user, text
func (_m *MessageRepository) InsertMessage(chat model.Chat, user model.User, text string) (string, error) {
	ret := _m.Called(chat, user, text)

	var r0 string
	if rf, ok := ret.Get(0).(func(model.Chat, model.User, string) string); ok {
		r0 = rf(chat, user, text)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(model.Chat, model.User, string) error); ok {
		r1 = rf(chat, user, text)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
